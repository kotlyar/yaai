version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: yaai_postgres
    environment:
      POSTGRES_DB: yaai
      POSTGRES_USER: yaai
      POSTGRES_PASSWORD: yaai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - yaai_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: yaai_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - yaai_network

  # ClickHouse for Analytics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: yaai_clickhouse
    environment:
      CLICKHOUSE_DB: yaai_analytics
      CLICKHOUSE_USER: yaai
      CLICKHOUSE_PASSWORD: yaai_password
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./scripts/clickhouse-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - yaai_network

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: yaai_backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://yaai:yaai_password@postgres:5432/yaai
      REDIS_URL: redis://redis:6379
      CLICKHOUSE_URL: http://clickhouse:8123
      JWT_SECRET: your-super-secret-jwt-key
      YANDEX_DIRECT_TOKEN: ${YANDEX_DIRECT_TOKEN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
      - clickhouse
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    networks:
      - yaai_network

  # Frontend Dashboard
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: yaai_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - yaai_network

  # Analytics Python Service
  analytics:
    build:
      context: ./apps/analytics
      dockerfile: Dockerfile
    container_name: yaai_analytics
    environment:
      DATABASE_URL: postgresql://yaai:yaai_password@postgres:5432/yaai
      CLICKHOUSE_URL: http://clickhouse:8123
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - postgres
      - clickhouse
      - redis
    volumes:
      - ./apps/analytics:/app
      - ./data/models:/app/models
    networks:
      - yaai_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: yaai_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - yaai_network

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:

networks:
  yaai_network:
    driver: bridge